name: Python application

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install cluster
      run: |
        mkdir -p /var/registry
        cd /var/registry
        mkdir /var/registry/{certs,data,auth}
        cat > csr_answer.txt << EOF
        [req]
        default_bits = 4096
        prompt = no
        default_md = sha256
        x509_extensions = req_ext
        req_extensions = req_ext
        distinguished_name = dn
        
        [ dn ]
        C=US
        ST=New York
        L=New York
        O=MyOrg
        OU=MyOU
        emailAddress=me@working.me
        CN=registry
        
        [ req_ext ]
        subjectAltName = @alt_names
        subjectKeyIdentifier = hash
        authorityKeyIdentifier = keyid:always,issuer
        basicConstraints = critical, CA:true
        keyUsage = critical, digitalSignature, cRLSign, keyCertSign
        
        [ alt_names ]
        DNS.1 = registry
        DNS.2 = registry.example.com                        
        EOF
        
        openssl req -newkey rsa:4096 -nodes -sha256 -keyout domain.key -x509 -days 3650 -out domain.crt -config <(cat csr_answer.txt)
        
        htpasswd -bBc /var/registry/auth/htpasswd root ort
        
        install -y jq openssl docker httpd-tools curl wget telnet nmap bind-utils iperf3 net-tools ftp tftp bash-completion runc
        
        docker load -i dockerio_library_registry2.tar.gz
        
        docker tag <imageidtag> docker.io/library/registry:2
        
        docker run --name registry -p 5000:5000 -v /var/registry/data:/var/lib/registry:z -v /var/registry/auth:/auth:z -v /var/registry/certs:/certs:z -e "REGISTRY_AUTH=htpasswd" -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key -d docker.io/library/registry:2
        
        curl -u root:octopus -k https://registry:5000/v2/_catalog
    - name: Run tests
      run: |
        pytest
